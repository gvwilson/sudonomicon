# 1

# A

# B

- key: block
  en:
    term: block
    def: >
      A set of bytes of a fixed size.

- key: block_device
  en:
    term: block device
    def: >
      An I/O interface that reads or writes fixed-size [blocks](#block).

# C

- key: certificate_authority
  en:
    term: certificate authority
    acronym: CA
    def: >
      An organization that issues, stores, and [signs](#digital_signature) [digital certificates](#digital_certificate).

# D

- key: deployment
  en:
    term: deployment
    def: >
      The act of making software available for use, e.g., by distributing it as
      package or by running a [service](#service).

- key: digital_certificate
  en:
    term: digital certificate
    def: >
      A file containing a [public cryptography key](#public_key_crypto)
      and potentially other information such as the owner's email address
      or an expiration date.
      Digital certificates are used to establish identity online.

- key: digital_signature
  en:
    term: digital signature
    def: >
      A means of establishing the authenticity of a message or document.

# E

# F

- key: fragility
  en:
    term: fragility
    def: >
      Used to describe a system that only works correctly if everything goes well;
      the opposite of [robust](#robustness).

# G

# H

- key: https
  en:
    term: HyperText Transfer Protocol Secure
    acronym: HTTPS
    def: >
      An encrypted version of [HTTP](#http) used for secure communication.

# I

# J

# K

# L

# M

# N

# O

# P

- key: pipe_shell
  en:
    term: pipe
    def: >
      To use the output of one computation as the input for the next, or the
      connection between the two computations responsible for the data transfer.

- key: public_key_crypto
  en:
    term: public key cryptography
    def: >
      A way to encrypt data in which each key undoes the effect of the other,
      but it is practically impossible to determine one key given the other.

# Q

# R

- key: robustness
  en:
    term: robustness
    def: >
      The ability to cope with errors or unlikely events while executing;
      the opposite of [fragile](#fragility).

# S

- key: service
  en:
    term: service
    def: >
      A long-running program that provides functionality to other programs
      (or people). A service may run on a local computer for personal use,
      or may be networked for wider use.

- key: socket
  en:
    term: socket
    def: >
      A communication channel between two computers
      that provides an interface similar to reading and writing files.

- key: stderr
  ref:
  - stdin
  - stdout
  en:
    term: standard error
    def: >
      A predefined communication channel typically used to report errors.

- key: stdin
  ref:
  - stderr
  - stdout
  en:
    term: standard input
    def: >
      A predefined communication channel typically used to read input
      from the keyboard or from the previous process in a
      [pipe](#pipe_shell).

- key: stdout
  ref:
  - stderr
  - stdin
  en:
    term: standard output
    def: >
      A predefined communication channel typically used to send output
      to the screen or to the next process in a
      [pipe](#pipe_shell).

- key: stream
  en:
    term: stream
    def: >
      A sequence of bytes or other data of variable length that can only
      be processed in sequential order.

# T

- key: tls_ssl
  en:
    term: Transport Layer Security/Secure Sockets Layer
    acronym: TLS/SSL
    def: >
      A cryptographic protocol for secure communication over a computer network.

# U

# V

# W

- key: wrap_object
  en:
    term: wrap (an object)
    def: >
      To replace an object in a program with one that has the same external interface
      but which behaves differently or performs extra operations.
      
# X

# Y

# Z
